name: ChatBuddy deployment pipeline

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  create-deployment-artifact:
    name: Create deployment artifact
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: 16.x

    - name: Build
      run: |
        npm i
        
    - name: Package and store artifact
      env:
        GITHUB_SHA: ${{ github.sha }}
      run: tar -czf "${GITHUB_SHA}".tar.gz --exclude=node_modules --exclude=.git --exclude=*.env *
      
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: app-build
        path: ${{ github.sha }}.tar.gz
  
  prepare-release-on-server:
    runs-on: ubuntu-latest
    needs: create-deployment-artifact
    name: Prepare release on server
    steps:
    - uses: actions/download-artifact@v3
      with: 
        name: app-build
    - name: Upload artifact to DigitalOcean
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.DIGITALOCEAN_SERVER }}
        username: ${{ secrets.DIGITALOCEAN_USERNAME }}
        key: ${{ secrets.DIGITALOCEAN_KEY }}
        source: ${{ github.sha }}.tar.gz
        target: ${{ secrets.APP_PATH }}/artifacts
    - name: Extract app archive
      uses: appleboy/ssh-action@master
      env:
        GITHUB_SHA: ${{ github.sha }}
      with:
        host: ${{ secrets.DIGITALOCEAN_SERVER }}
        username: ${{ secrets.DIGITALOCEAN_USERNAME }}
        key: ${{ secrets.DIGITALOCEAN_KEY }}
        envs: GITHUB_SHA
        script: |
          mkdir -p "${{ secrets.APP_PATH }}/releases/${GITHUB_SHA}"
          tar -xzf ${{ secrets.APP_PATH }}/artifacts/${GITHUB_SHA}.tar.gz -C "${{ secrets.APP_PATH }}/releases/${GITHUB_SHA}"
